{
  "version": 3,
  "sources": [
    "report.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Report Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-report/blob/master/LICENSE.txt\n###\n\nenumerate = (keys...) ->\n\tobj = {keys}\n\tobj[k] = i+1 for k,i in keys\n\tobj\n\nintervals = enumerate 'HOURLY','DAILY','WEEKLY','MONTHLY','YEARLY'\nhours = enumerate 'MIDNIGHT','MORNING','NOON','EVENING'\nwdays = enumerate 'SUNDAY','MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY'\nmonths = enumerate 'JANUARY','FEBUARY','MARCH','APRIL','MAY','JUNE','JULY','AUGUST','SEPTEMBER','OCTOBER','NOVEMBER','DECEMBER'\n\nparse = (text) ->\n  schedule = []\n  issue = null\n  for word in text.match(/\\S+/g) or []\n    try\n      if intervals[word]\n        schedule.push issue =\n          interval: word\n          recipients: []\n          offsets: []\n      else if months[word] or wdays[word] or hours[word]\n        issue.offsets.push word\n      else if word.match /@/\n        issue.recipients.push word\n      else\n        schedule.push {trouble: word}\n    catch e\n      schedule.push {trouble: e.message}\n  schedule\n\nhuman = (msecs) ->\n  return \"#{Math.floor msecs} milliseconds\" if (secs = msecs/1000) < 2\n  return \"#{Math.floor secs} seconds\" if (mins = secs/60) < 2\n  return \"#{Math.floor mins} minutes\" if (hrs = mins/60) < 2\n  return \"#{Math.floor hrs} hours\" if (days = hrs/24) < 2\n  return \"#{Math.floor days} days\" if (weeks = days/7) < 2\n  return \"#{Math.floor weeks} weeks\" if (months = days/30.5) < 2\n  return \"#{Math.floor months} months\" if (years = days/365) < 2\n  return \"#{Math.floor years} years\"\n\n\nprimAdvance = (date, issue, count) ->\n\t[y, m, d, h] = [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours()]\n\tresult = switch issue.interval\n\t\twhen 'HOURLY'  then new Date y, m, d, h+count\n\t\twhen 'DAILY'   then new Date y, m, d+count\n\t\twhen 'WEEKLY'  then new Date y, m, d-date.getDay()+7*count\n\t\twhen 'MONTHLY' then new Date y, m+count\n\t\twhen 'YEARLY'  then new Date y+count, 0\n\tfor offset in issue.offsets\n\t\t[y, m, d, h] = [result.getFullYear(), result.getMonth(), result.getDate(), result.getHours()]\n\t\tresult = if months[offset]\n\t\t\tnew Date y, months[offset]-1, d, h\n\t\telse if wdays[offset]\n\t\t\tnew Date y, m, d+(7-result.getDay()+wdays[offset]-1)%7, h\n\t\telse if hours[offset]\n\t\t\tnew Date y, m, d, h+6*(hours[offset]-1)\n\tresult\n\nadvance = (date, issue, count) ->\n\tprim = primAdvance date, issue, 0\n\tif prim > date\n\t\tprimAdvance date, issue, count-1 # when offset passes date\n\telse\n\t\tprimAdvance date, issue, count\n\nsoon = (issue) ->\n\tnow = new Date();\n\tnext = advance now, issue, 1\n\thuman next.getTime() - now.getTime()\n\nexplain = (issue) ->\n\tif issue.interval?\n\t\t\"reporting #{issue.interval} for #{issue.recipients.length} recipients in #{soon issue}\"\n\telse if issue.trouble?\n\t\t\"don't expect: <span class=error>#{issue.trouble}</span>\"\n\telse\n\t\t\"trouble\"\n\nmodule.exports = {intervals, parse, explain, advance} if module?\n\nsummarize = (schedule) ->\n\t(explain issue for issue in schedule).join \"<br>\"\n\nemit = ($item, item) ->\n\t$item.append $ \"\"\"\n\t\t<p>#{summarize parse item.text}</p>\n\t\"\"\"\n\nbind = ($item, item) ->\n\t$item.dblclick -> wiki.textEditor $item, item\n\nwindow.plugins.report = {emit, bind} if window?\n"
  ],
  "sourceRoot": ""
}