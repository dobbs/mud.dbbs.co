{
  "version": 3,
  "sources": [
    "calendar.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Calendar Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-calendar/blob/master/LICENSE.txt\n###\n\nmonths = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']\nspans = ['EARLY', 'LATE', 'DECADE', 'DAY', 'MONTH', 'YEAR']\n\nspan = (result, span) ->\n\tif (m = spans.indexOf result.span) < 0\n\t\tresult.span = span\n\telse if (spans.indexOf span) < m\n\t\tresult.span = span\n\nparse = (text) ->\n\trows = []\n\tfor line in text.split /\\n/\n\t\tresult = {}\n\t\twords = line.match /\\S+/g\n\t\tfor word, i in words\n\t\t\tif word.match /^\\d\\d\\d\\d$/\n\t\t\t\tresult.year = +word\n\t\t\t\tspan result, 'YEAR'\n\t\t\telse if m = word.match /^(\\d0)S$/\n\t\t\t\tresult.year = +m[1]+1900\n\t\t\t\tspan result, 'DECADE'\n\t\t\telse if (m = spans.indexOf word) >= 0\n\t\t\t\tresult.span = spans[m]\n\t\t\telse if (m = months.indexOf word[0..2]) >= 0\n\t\t\t\tresult.month = m+1\n\t\t\t\tspan result, 'MONTH'\n\t\t\telse if m = word.match /^([1-3]?[0-9])$/\n\t\t\t\tresult.day = +m[1]\n\t\t\t\tspan result, 'DAY'\n\t\t\telse\n\t\t\t\tresult.label = words[i..999].join ' '\n\t\t\t\tbreak\n\t\trows.push result\n\trows\n\napply = (input, output, date, rows) ->\n\tresult = []\n\tfor row in rows\n\t\tif input[row.label]?.date?\n\t\t\tdate = input[row.label].date\n\t\tif output[row.label]?.date?\n\t\t\tdate = output[row.label].date\n\t\tif row.year?\n\t\t\tdate = new Date row.year, 1-1\n\t\tif row.month?\n\t\t\tdate = new Date date.getYear()+1900, row.month-1\n\t\tif row.day?\n\t\t\tdate = new Date date.getYear()+1900, date.getMonth(), row.day\n\t\tif row.label?\n\t\t\toutput[row.label] = {date}\n\t\t\toutput[row.label].span = row.span if row.span?\n\t\trow.date = date\n\t\tradarValue = dateAsValue(row.date, row.span)\n\t\trow.units = radarValue.units\n\t\trow.value = radarValue.value\n\t\trow.precision = radarValue.precision\n\t\tresult.push row\n\tresult\n\nshow = (date, span) ->\n\tswitch span\n\t\twhen 'YEAR' then date.getFullYear()\n\t\twhen 'DECADE' then \"#{date.getFullYear()}'S\"\n\t\twhen 'EARLY' then \"Early #{date.getFullYear()}'S\"\n\t\twhen 'LATE' then \"Late #{date.getFullYear()}'S\"\n\t\twhen 'MONTH' then \"#{months[date.getMonth()]} #{date.getFullYear()}\"\n\t\telse \"#{date.getDate()} #{months[date.getMonth()]} #{date.getFullYear()}\"\n\n\nformat = (rows) ->\n\tfor row in rows\n\t\t\"\"\"<tr><td>#{show row.date, row.span}<td>#{row.label}\"\"\"\n\nprecisionFor =\n\tDAY:\t\t1000 * 60 * 60 * 24\n\tMONTH:\t1000 * 60 * 60 * 24 * 365.25 / 12\n\tYEAR:\t\t1000 * 60 * 60 * 24 * 365.25\n\tDECADE:\t1000 * 60 * 60 * 24 * 365.25 * 10\n\tEARLY:\t1000 * 60 * 60 * 24 * 365.25 * 10\n\tLATE:\t\t1000 * 60 * 60 * 24 * 365.25 * 10\n\nunitsFor =\n\tDAY:\t\t'day'\n\tMONTH:\t'month'\n\tYEAR:\t\t'year'\n\tDECADE:\t'decade'\n\tEARLY:\t'decade'\n\tLATE:\t\t'decade'\n\ndateAsValue = (date, span) ->\n\tprecisionInMilliseconds = precisionFor[span] ? precisionFor.DAY\n\tunits : [unitsFor[span] ? unitsFor.DAY]\n\tvalue : (Math.floor(date.getTime() / precisionInMilliseconds))\n\tprecision : precisionInMilliseconds\n\nradarSource = ($item, results) ->\n\tdata = {}\n\tfor row in results\n\t\tdata[row.label] =\n\t\t\tunits: row.units\n\t\t\tvalue: row.value\n\t\t\tprecision: row.precision\n\n\t$item.addClass 'radar-source'\n\t$item.get(0).radarData = -> data\n\nmodule.exports = {parse, apply, format, radarSource} if module?\n\n\nemit = (div, item) ->\n\trows = parse item.text\n\twiki.log 'calendar rows', rows\n\tresults = apply {}, {}, new Date(), rows\n\twiki.log 'calendar results', results\n\tradarSource div, results\n\tdiv.append \"\"\"\n\t\t<table style=\"width:100%; background:#eee; padding:.8em; margin-bottom:5px;\">#{format(results).join ''}</table>\n\t\"\"\"\n\nbind = (div, item) ->\n\tdiv.dblclick -> wiki.textEditor div, item\n\nwindow.plugins.calendar = {emit, bind} if window?\n"
  ],
  "sourceRoot": ""
}