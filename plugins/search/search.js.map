{
  "version": 3,
  "sources": [
    "search.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nexpand = (text)->\n  text\n    .replace /&/g, '&amp;'\n    .replace /</g, '&lt;'\n    .replace />/g, '&gt;'\n    .replace /\\*(.+?)\\*/g, '<i>$1</i>'\n\nemit = ($item, item) ->\n\n  flag = (slug, site) ->\n    \"\"\"\n      <img class=\"remote\"\n        title=\"#{site}\"\n        src=\"http://#{site}/favicon.png\"\n        data-site=\"#{site}\"\n        data-slug=\"#{slug}\">\n    \"\"\"\n\n  twins = (slug, sites) ->\n    \"#{slug.replace(/-/g, ' ')}<br>#{(flag slug, site for site in sites).join(' ')}\"\n\n  report = (result) ->\n    (twins slug, sites for slug, sites of result).join('<br>')\n\n  $item.append if item.result?\n    \"<div class=report>#{report item.result}</div>\"\n  else\n    \"\"\"\n      <div style=\"width:93%; background:#eee; padding:16px; margin-bottom:5px; text-align: center;\">\n        <span>#{expand item.text}<br></span>\n        <p class=\"caption\">ready</p>\n        <div class=report style=\"text-align:left;\"></div>\n      </div>\n    \"\"\"\n\n  status = (text) ->\n    $item.find('p.caption').text text\n\n  success = (data, elapsed) ->\n    status \"#{Object.keys(data.result).length} titles, #{elapsed} sec\"\n    $item\n      .find('.report')\n      .append report data.result\n\n  search = (request) ->\n    url = \"http://#{item.site||'search.fed.wiki.org:3030'}/match\"\n    console.log 'search', request\n    quickly = () ->\n      start = Date.now()\n      (data) ->\n        stop = Date.now()\n        success data, (stop-start)/1000.0\n    $.post(url, request, quickly(), 'json')\n      .fail (e) -> status \"search failed: #{e.responseText || e.statusText}\"\n    $item.find('.report').empty()\n    status \"searching\"\n\n  keystroke = (e) ->\n    if e.keyCode == 13\n      input = $item.find('input').val()\n      if input.match /\\w/\n        request = $.extend({}, $item.request);\n        request.query += \" #{input}\"\n        search request\n\n  handle = (request) ->\n    if request.input\n      $item.request = request\n      $item\n        .find('span')\n        .append '<input type=text style=\"width: 95%;\"></input>'\n        .keyup(keystroke)\n    else if request.search\n      $item.request = request\n      $item\n        .find('span')\n        .append '<button>search</button>'\n        .click -> search request\n    else\n      search request\n\n  parse = (text) ->\n    request = {}\n    text = text.replace /\\b(AND|OR)\\b/g, (op) ->\n      request.match = op.toLowerCase()\n      ''\n    text = text.replace /\\b(ALL)\\b/, (op) ->\n      request.match = 'and'\n      ''\n    text = text.replace /\\b(ANY)\\b/, (op) ->\n      request.match = 'or'\n      ''\n    text = text.replace /\\b(WORDS|LINKS|SITES|SLUGS|ITEMS|PLUGINS)\\b/g, (op) ->\n      request.find = op.toLowerCase()\n      ''\n    text = text.replace /\\b(INPUT)\\b/, (op) ->\n      request.input = true\n      ''\n    text = text.replace /\\b(SEARCH)\\b/, (op) ->\n      request.search = true\n      ''\n    request.query = text\n    request\n\n  handle parse item.text if item.text?\n\nbind = ($item, item) ->\n  $item.dblclick -> wiki.textEditor $item, item\n  $item.find('input').dblclick -> false\n\nwindow.plugins.search = {emit, bind} if window?\nmodule.exports = {expand} if module?\n\n"
  ],
  "sourceRoot": ""
}