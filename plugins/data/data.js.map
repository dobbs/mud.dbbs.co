{
  "version": 3,
  "sources": [
    "data.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Data Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-data/blob/master/LICENSE.txt\n###\n\n# lots of cases, ward will try these\n# http://nmsi.localhost:1111/view/cotton-in-the-field/view/tier-1-material-summary/cotton.localhost:1111/talk-about-wool/view/cotton-fabric\n\nwindow.plugins.data =\n  emit: (div, item) ->\n    $('<p />').addClass('readout').appendTo(div).text(summary(item))\n    $('<p />').addClass('label').appendTo(div).html(wiki.resolveLinks(item.text||'data'))\n  bind: (div, item) ->\n    lastThumb = null\n    div.find('.readout')\n      .mousemove (e) ->\n        if (e.offsetX == undefined)\n          offset = e.pageX - $(this).offset().left\n        else\n          offset = e.offsetX\n        thumb = thumbs(item)[Math.floor(thumbs(item).length * offset / e.target.offsetWidth)]\n        return if thumb == lastThumb || null == (lastThumb = thumb)\n        refresh thumb\n        $(div).trigger('thumb', thumb)\n      .dblclick (e) ->\n        wiki.dialog \"JSON for #{item.text}\",  $('<pre/>').text(JSON.stringify(item, null, 2))\n    div.find('.label')\n      .dblclick ->\n        wiki.textEditor div, item\n    $(\".main\").on 'thumb', (evt, thumb) ->\n      refresh thumb unless thumb == lastThumb || -1 == (thumbs(item).indexOf thumb)\n\n    value = (obj) ->\n      return NaN unless obj?\n      switch obj.constructor\n        when Number then obj\n        when String then +obj\n        when Array then value(obj[0])\n        when Object then value(obj.value)\n        when Function then obj()\n        else NaN\n\n    average = (thumb) ->\n      values = _.map(item.data, (obj) -> value(obj[thumb]))\n      values = _.reject(values, (obj) -> isNaN obj)\n      result = _.reduce(values, ((m,n) -> m+n), 0) / values.length\n      result.toFixed 2\n\n    readout = (thumb) ->\n      return average(thumb) if item.columns?\n      return summary(item) unless item.data.object?\n      field = item.data[thumb]\n      return \"#{field.value}\" if field.value?\n      return \"#{field.toFixed 2}\" if field.constructor == Number\n      NaN\n\n    label = (thumb) ->\n      return \"Averaged:<br>#{thumb}\" if item.columns? && item.data.length > 1\n      thumb\n\n    refresh = (thumb) ->\n      div.find('.readout').text readout(thumb)\n      div.find('.label').html label(thumb)\n\nsummary = (item) ->\n  return \"#{item.data.length}x#{item.columns.length}\" if item.columns?\n  return \"#{item.data.nodes.length}/#{item.data.links.length}\" if item.data? && item.data.nodes? && item.data.links?\n  return \"1x#{thumbs(item).length}\"\n  \"data\"\n\nthumbs = (item) ->\n  return item.columns if item.columns?\n  (key for own key of item.data)\n"
  ],
  "sourceRoot": ""
}