{
  "version": 3,
  "sources": [
    "pushpin.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Activity Pushpin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-pushpin/blob/master/LICENSE.txt\n###\n\nw = 426\nh = 300\n\nfy = \"FY09\"       # [ 'FY05', 'FY06', 'FY07', 'FY08', 'FY09' ]\nregion = \"N ASIA\" # [ 'N ASIA', 'S ASIA', 'AMERICAS', 'EMEA' ]\nbrand = \"NIKE\"    # [ 'AFFILIATE', 'NIKE' ]\nbu = \"APRL\"       # [ 'EQUIP', 'FTWR', 'APRL', '_NA' ]s\n\ndisplay = (div, item, vis, collection, locations, factories) ->\n\n  # Use a map projection to scale lat/lng data\n  xy = d3.geo.mercator().scale(350).translate([-550, 300])\n  path = d3.geo.path().projection(xy)\n  fill = d3.scale.category20()\n\n  countries = {}\n\n  factories = factories.filter (o) ->\n    o.fy is fy and\n    o.region is region and\n    o.brand is brand and\n    o.bu is bu\n\n  factories = factories.map (f) ->\n    f.coordinates = []\n    f.coordinates[0] = locations[f.country].location.lng\n    f.coordinates[1] = locations[f.country].location.lat\n    # Set starting position\n    f.x = 0\n    f.y = 0\n    # Set destination position for the circle\n    f.fx = xy(f.coordinates)[0]\n    f.fy = xy(f.coordinates)[1]\n    # Build hash of country coordinates for future use.\n    countries[f.country] = xy(f.coordinates)\n    f\n\n  # Create force layout to give sense of charge.\n  force = d3.layout.force()\n    .nodes(factories)\n    .links([])\n    .size([w, h])\n    .friction(.75)\n    .charge(-4)\n    .start()\n\n  # Create the paths for countries\n\n  states = vis.append(\"svg:g\")\n    .attr(\"id\", \"states\")\n\n  states.selectAll(\"path\")\n    .data(collection.features)\n    .enter()\n    .append(\"svg:path\")\n    .attr(\"d\", path)\n    .append(\"title\")\n    .text (d) -> d.properties.name\n\n  # Create the marks for factories\n  # Get nodes that are entering stage.\n  # Set attributes on entering nodes.\n\n  node = vis.selectAll(\"circle.node\")\n    .data(factories)\n    .enter()\n    .append(\"svg:circle\")\n    .attr(\"opacity\", 0)\n    .attr(\"class\", \"node\")\n    .attr(\"cx\", (d) -> d.x )\n    .attr(\"cy\", (d) -> d.y )\n    .attr(\"r\", 3)\n    .attr(\"title\", (d) -> d.crcode )\n    .style(\"fill\", (d, i) -> d3.rgb(fill(d.country)).darker Math.random() )\n    .call(force.drag)\n    .transition()\n    .duration(900)\n    .attr(\"opacity\", 1)\n\n  force.on \"tick\", (e) ->\n    # Push nodes toward their designated focus.\n    k = .3 * e.alpha\n    factories.forEach (o, i) ->\n      # Push nodes towards location set above.\n      o.y += (o.fy - o.y) * k\n      o.x += (o.fx - o.x) * k\n    # Move the marks to new location\n    vis.selectAll(\"circle.node\")\n      .attr(\"cx\", (d) -> d.x )\n      .attr(\"cy\", (d) -> d.y )\n\nwindow.plugins.pushpin =\n  emit: (div, item) ->\n    div.append \"\"\"\n      <style type=\"text/css\">\n        .pushpin path { fill: #ccc; stroke: #fff; }\n        .pushpin svg { border: solid 1px #ccc; background: #eee; }\n      </style>\n    \"\"\"\n\n  bind: (div, item) ->\n    wiki.getScript '/js/d3/d3.min.js', ->\n      vis = d3.select(div.get(0))\n        .append(\"svg:svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n    #  wiki.getScript '/js/d3/d3.geo.js', ->\n    #    wiki.getScript '/js/d3/d3.geom.js', ->\n    #      wiki.getScript '/js/d3/d3.layout.js', ->\n      d3.json \"/plugins/pushpin/world-countries.json\", (collection) ->\n        d3.json \"/plugins/pushpin/factories-locations.json\", (locations) ->\n          d3.json \"/plugins/pushpin/factories.json\", (factories) ->\n            display div, item, vis, collection, locations, factories\n"
  ],
  "sourceRoot": ""
}