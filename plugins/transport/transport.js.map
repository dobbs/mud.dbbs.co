{
  "version": 3,
  "sources": [
    "transport.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nexpand = (text)->\n  text\n    .replace /&/g, '&amp;'\n    .replace /</g, '&lt;'\n    .replace />/g, '&gt;'\n    .replace /\\*(.+?)\\*/g, '<i>$1</i>'\n\nbeam = (url) ->\n  $.getJSON url, (page) ->\n    resultPage = wiki.newPage(page)\n    wiki.showResult resultPage\n\ngraphData = ($item) ->\n  graphs = []\n  candidates = $(\".item:lt(#{$('.item').index($item)})\")\n  for each in candidates\n    if $(each).hasClass 'graph-source'\n      graphs.push each.graphData()\n  graphs\n\ngraphStats = ($item) ->\n  graphs = nodes = arcs = 0\n  candidates = $(\".item:lt(#{$('.item').index($item)})\")\n  for each in candidates\n    if $(each).hasClass 'graph-source'\n      graphs += 1\n      for node, arc of each.graphData()\n        nodes += 1\n        arcs += arc.length\n  {graphs, nodes, arcs}\n\nreport = (object) ->\n  \"\"\"<pre style=\"text-align: left; background-color:#ddd; padding:8px;\"\">#{JSON.stringify object, null, '  '}</pre>\"\"\"\n\noptions = (text) ->\n  domain = m[1] if m = text.match /(https?:\\/\\/.*?\\/)/\n  post = m[1] if m = text.match /\\bPOST\\b\\s*(.*)/\n  graph = !!text.match /\\bGRAPH\\b/\n  {domain, post, graph}\n\nemit = ($item, item) ->\n  opt = options item.text\n  $item.append \"\"\"\n    <div style=\"background-color:#eee;padding:15px;text-align:center;\">\n      <div class=preview>\n      </div>\n      <p class=transport-action>\n        transporting through<br>\n        #{expand item.text}\n      </p>\n      <p class=caption>\n        unavailable\n      </b>\n    </div>\n  \"\"\"\n  if opt.domain\n    $.get opt.domain, ->\n      $item.find('.caption').text 'ready'\n  if opt.graph\n    $item.find('.preview').html report graphStats($item)\n    $item.find('.transport-action').append \"<p><button>Beam Up</button></p>\"\n\nbind = ($item, item) ->\n  opt = options item.text\n  $item.dblclick -> wiki.textEditor $item, item\n\n  $item.find('button').click (e) ->\n     post e, graphData($item)\n\n  $item.on 'drop', (e) ->\n    e.preventDefault()\n    e.stopPropagation()\n    post e,\n      text: e.originalEvent.dataTransfer.getData(\"text\")\n      html: e.originalEvent.dataTransfer.getData(\"text/html\")\n      url:  e.originalEvent.dataTransfer.getData(\"URL\")\n\n  post = (e, params) ->\n    $item.find('.caption').text 'waiting'\n    $page = $item.parents('.page') unless e.shiftKey\n\n    req =\n      type: \"POST\",\n      url: opt.post\n      dataType: 'json',\n      contentType: \"application/json\",\n      data: JSON.stringify(params)\n\n    $.ajax(req).done (page) ->\n      $item.find('.caption').text 'ready'\n      resultPage = wiki.newPage(page)\n      wiki.showResult resultPage, {$page}\n\n\nwindow.plugins.transport = {emit, bind} if window?\nmodule.exports = {expand} if module?\n"
  ],
  "sourceRoot": ""
}