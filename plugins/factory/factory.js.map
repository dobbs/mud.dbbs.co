{
  "version": 3,
  "sources": [
    "factory.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Factory Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-factory/blob/master/LICENSE.txt\n###\n\nwindow.plugins.factory =\n  emit: (div, item) ->\n    div.append '<p>Double-Click to Edit<br>Drop Text or Image to Insert</p>'\n    showMenu = ->\n      menu = div.find('p').append \"<br>Or Choose a Plugin\"\n      menuItem = (title, name) ->\n        menu.append \"\"\"\n          <li><a class=\"menu\" href=\"#\" title=\"#{title}\">#{name}</a></li>\n        \"\"\"\n      if Array.isArray window.catalog\n        menuItem(info.title, info.name) for info in window.catalog\n      else  # deprecated\n        menuItem(info.menu, name) for name, info of window.catalog\n      menu.find('a.menu').click (evt)->\n        div.removeClass('factory').addClass(item.type=evt.target.text.toLowerCase())\n        div.unbind()\n        wiki.textEditor div, item\n\n    showPrompt = ->\n      div.append \"<p>#{wiki.resolveLinks(item.prompt)}</b>\"\n\n    if item.prompt\n      showPrompt()\n    else if window.catalog?\n      showMenu()\n    else\n      $.getJSON '/system/factories.json', (data) ->\n        window.catalog = data\n        showMenu()\n\n  bind: (div, item) ->\n\n    syncEditAction = () ->\n      wiki.log 'factory item', item\n      div.empty().unbind()\n      div.removeClass(\"factory\").addClass(item.type)\n      pageElement = div.parents('.page:first')\n      try\n        div.data 'pageElement', pageElement\n        div.data 'item', item\n        wiki.getPlugin item.type, (plugin) ->\n          plugin.emit div, item\n          plugin.bind div, item\n      catch err\n        div.append \"<p class='error'>#{err}</p>\"\n      wiki.pageHandler.put pageElement, {type: 'edit', id: item.id, item: item}\n\n    div.dblclick ->\n      div.removeClass('factory').addClass(item.type='paragraph')\n      div.unbind()\n      wiki.textEditor div, item\n\n    div.bind 'dragenter', (evt) -> evt.preventDefault()\n    div.bind 'dragover', (evt) -> evt.preventDefault()\n    div.bind \"drop\", (dropEvent) ->\n\n      punt = (data) ->\n        item.prompt = \"<b>Unexpected Item</b><br>We can't make sense of the drop.<br>#{JSON.stringify data}<br>Try something else or see [[About Factory Plugin]].\"\n        data.userAgent = navigator.userAgent\n        item.punt = data\n        wiki.log 'factory punt', dropEvent\n        syncEditAction()\n\n      readFile = (file) ->\n        if file?\n          [majorType, minorType] = file.type.split(\"/\")\n          if file.name.toLowerCase().match(/\\.csv$/)\n            majorType = 'text'\n            minorType = 'csv'\n          reader = new FileReader()\n          if majorType == \"image\"\n            reader.onload = (loadEvent) ->\n              item.type = 'image'\n              item.url = loadEvent.target.result\n              item.caption ||= \"Uploaded image\"\n              syncEditAction()\n            reader.readAsDataURL(file)\n          else if majorType == \"text\"\n            reader.onload = (loadEvent) ->\n              result = loadEvent.target.result\n              if minorType == 'csv'\n                item.type = 'data'\n                item.columns = (array = csvToArray result)[0]\n                item.data = arrayToJson array\n                item.text = file.fileName\n              else\n                item.type = 'paragraph'\n                item.text = result\n              syncEditAction()\n            reader.readAsText(file)\n          else\n            punt\n              number: 1\n              name: file.fileName\n              type: file.type\n        else\n          punt\n            number: 2\n            types: dropEvent.originalEvent.dataTransfer.types\n\n      dropEvent.preventDefault()\n      if (dt = dropEvent.originalEvent.dataTransfer)?\n        if dt.types? and ('text/uri-list' in dt.types or 'text/x-moz-url' in dt.types) and not ('Files' in dt.types)\n          url = dt.getData 'URL'\n          if found = url.match /^https?:\\/\\/([a-zA-Z0-9:.-]+)(\\/([a-zA-Z0-9:.-]+)\\/([a-z0-9-]+(_rev\\d+)?))+$/\n            wiki.log 'factory drop url', found\n            [ignore, origin, ignore, item.site, item.slug, ignore] = found\n            if $.inArray(item.site,['view','local','origin']) >= 0\n              item.site = origin\n            $.getJSON \"//#{item.site}/#{item.slug}.json\", (remote) ->\n              wiki.log 'factory remote', remote\n              item.type = 'reference'\n              item.title = remote.title || item.slug\n              item.text = wiki.createSynopsis remote\n              syncEditAction()\n              wiki.registerNeighbor item.site if item.site?\n          else\n            punt\n              number: 4\n              url: url\n              types: dt.types\n        else if 'Files' in dt.types\n          readFile dt.files[0]\n        else\n          punt\n            number: 5\n            types: dt.types\n      else\n        punt\n          number: 6\n          trouble: \"no data transfer object\"\n\n# from http://www.bennadel.com/blog/1504-Ask-Ben-Parsing-CSV-Strings-With-Javascript-Exec-Regular-Expression-Command.htm\n# via http://stackoverflow.com/questions/1293147/javascript-code-to-parse-csv-data\n\ncsvToArray = (strData, strDelimiter) ->\n  strDelimiter = (strDelimiter or \",\")\n  objPattern = new RegExp((\"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" + \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" + \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\"), \"gi\")\n  arrData = [ [] ]\n  arrMatches = null\n  while arrMatches = objPattern.exec(strData)\n    strMatchedDelimiter = arrMatches[1]\n    arrData.push []  if strMatchedDelimiter.length and (strMatchedDelimiter isnt strDelimiter)\n    if arrMatches[2]\n      strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\")\n    else\n      strMatchedValue = arrMatches[3]\n    arrData[arrData.length - 1].push strMatchedValue\n  arrData\n\narrayToJson = (array) ->\n  cols = array.shift()\n  rowToObject = (row) ->\n    obj = {}\n    for [k, v] in _.zip(cols, row)\n      obj[k] = v if v? && (v.match /\\S/) && v != 'NULL'\n    obj\n  (rowToObject row for row in array)\n"
  ],
  "sourceRoot": ""
}