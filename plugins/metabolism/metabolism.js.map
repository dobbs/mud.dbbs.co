{
  "version": 3,
  "sources": [
    "metabolism.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Metabolism Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-metabolism/blob/master/LICENSE.txt\n###\n\nwindow.plugins.metabolism =\n  emit: (div, item) ->\n  bind: (div, item) ->\n\n    data = []\n    input = {}\n    output = {}\n\n    div.addClass 'radar-source'\n    div.get(0).radarData = -> output\n    div.mousemove (e) -> $(div).triggerHandler('thumb', $(e.target).text())\n\n    # http://stella.laurenzo.org/2011/03/bulletproof-node-js-coding/\n\n    attach = (search,callback = ->) ->\n      for elem in wiki.getDataNodes div\n        if (source = $(elem).data('item')).text.indexOf(search) >= 0\n          new_data = _.select source.data, (row) -> row.Activity?\n          return callback new_data\n      $.get \"/data/#{search}\", (page) ->\n        throw new Error \"can't find dataset '#{s}'\" unless page\n        for obj in page.story\n          if obj.type == 'data' && obj.text? && obj.text.indexOf(search) >= 0\n            new_data = _.select obj.data, (row) -> row.Activity?\n            return callback new_data\n        throw new Error \"can't find dataset '#{s}' in '#{page.title}'\"\n\n\n    query = (s) ->\n      keys = $.trim(s).split ' '\n      choices = data\n      for k in keys\n        next if k == ' '\n        n = choices.length\n        choices = _.select choices, (row) ->\n          row.Activity.indexOf(k) >= 0 || row.Category.indexOf(k) >= 0\n        throw new Error \"Can't find #{k} in remaining #{n} choices\" if choices.length == 0\n      choices\n\n    sum = (v) ->\n      _.reduce v, (s,n) -> s += n\n\n    avg = (v) ->\n      sum(v)/v.length\n\n    round = (n) ->\n      return '?' unless n?\n      if n.toString().match /\\.\\d\\d\\d/\n        n.toFixed 2\n      else\n        n\n\n    annotate = (text) ->\n      return '' unless text?\n      \" <span title=\\\"#{text}\\\">*</span>\"\n\n    calculate = (item) ->\n      list = []\n      allocated = 0\n      lines = item.text.split \"\\n\"\n      report = []\n\n      dispatch = (list, allocated, lines, report, done) ->\n        color = '#eee'\n        value = comment = null\n        hours = ''\n        line = lines.shift()\n        return done report unless line?\n\n        next_dispatch = ->\n          list.push +value if value? and ! isNaN +value\n          report.push \"<tr style=\\\"background:#{color};\\\"><td style=\\\"width: 70%;\\\">#{line}#{annotate comment}<td>#{hours}<td><b>#{round value}</b>\"\n          dispatch list, allocated, lines, report, done\n\n        try\n          if args = line.match /^USE ([\\w ]+)$/\n            color = '#ddd'\n            value = ' '\n            return attach (line = args[1]), (new_data) ->\n              data = new_data\n              next_dispatch()\n          else if args = line.match /^([0-9.]+) ([\\w ]+)$/\n            allocated += hours = +args[1]\n            result = query line = args[2]\n            output[line] = value = (input = result[0]).MET * hours\n            if result.length > 1\n              comment = (\"#{row.Category} (#{row.MET}): #{row.Activity}\" for row in result).join \"\\n\\n\"\n          else if input[line]?\n            value = input[line]\n            comment = input[\"#{line} Assumptions\"] || null\n          else if line.match /^[0-9\\.-]+$/\n            value = +line\n          else if line == 'REMAINDER'\n            value = 24 - allocated\n            allocated += value\n          else if line == 'SUM'\n            color = '#ddd'\n            [value, list] = [sum(list), []]\n          else if line == 'AVG'\n            color = '#ddd'\n            [value, list] = [avg(list), []]\n          else\n            color = '#edd'\n        catch err\n          color = '#edd'\n          value = null\n          comment = err.message\n        return next_dispatch()\n\n      dispatch list, allocated, lines, report, (report) ->\n        text = report.join \"\\n\"\n        table = $('<table style=\"width:100%; background:#eee; padding:.8em;\"/>').html text\n        div.append table\n        div.dblclick -> wiki.textEditor div, item\n\n    calculate item\n"
  ],
  "sourceRoot": ""
}