{
  "version": 3,
  "sources": [
    "plugmatic.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nany = (array) ->\n  array[Math.floor Math.random()*array.length]\n\ntraffic = (installed, published) ->\n  color =\n    gray:   '#ccc'\n    red:    '#f55'\n    yellow: '#fb0'\n    green:  '#0e0'\n\n  if installed? and published?\n    if installed == published\n      color.green\n    else\n      color.yellow\n  else\n    if published?\n      color.red\n    else\n      color.gray\n\nescape = (text) ->\n  text\n    .replace /&/g, '&amp;'\n    .replace /</g, '&lt;'\n    .replace />/g, '&gt;'\n\nexpand = (string) ->\n  stashed = []\n  stash = (text) ->\n    here = stashed.length\n    stashed.push text\n    \"〖#{here}〗\"\n  unstash = (match, digits) ->\n    stashed[+digits]\n  external = (match, href, protocol) ->\n    stash \"\"\"\\\"<a class=\"external\" target=\"_blank\" href=\"#{href}\" title=\"#{href}\" rel=\"nofollow\">#{escape href}</a>\\\"\"\"\"\n  string = string\n    .replace /〖(\\d+)〗/g, \"〖 $1 〗\"\n    .replace /\"((http|https|ftp):.*?)\"/gi, external\n  escape string\n    .replace /〖(\\d+)〗/g, unstash\n\n\nparse = (text) ->\n  result = {columns: [], plugins: []}\n  lines = (text || '').split /\\n+/\n  for line in lines\n    result.columns.push 'status'    if line.match /\\bSTATUS\\b/\n    result.columns.push 'name'      if line.match /\\bNAME\\b/\n    result.columns.push 'menu'      if line.match /\\bMENU\\b/\n    result.columns.push 'pages'     if line.match /\\bPAGES\\b/\n    result.columns.push 'service'   if line.match /\\bSERVICE\\b/\n    result.columns.push 'bundled'   if line.match /\\bBUNDLED\\b/\n    result.columns.push 'installed' if line.match /\\bINSTALLED\\b/\n    result.columns.push 'published' if line.match /\\bPUBLISHED\\b/\n    result.plugins.push m[1]        if m = line.match /^wiki-plugin-(\\w+)$/\n  if result.columns.length == 0\n    result.columns = if result.plugins.length == 0\n      ['name', 'pages', 'menu', 'bundled', 'installed']\n    else\n      ['status', 'name', 'pages', 'bundled', 'installed', 'published']\n  result\n\n\nemit = ($item, item) ->\n  markup = parse item.text\n  $item.append \"\"\"\n    <p style=\"background-color:#eee;padding:15px;\">\n      loading plugin details\n    </p>\n  \"\"\"\n\n  render = (data) ->\n    column = 'installed'\n    pub = (name) -> data.publish.find (obj) -> obj.plugin == name\n\n    format = (markup, plugin, dependencies) ->\n      name = plugin.plugin\n      months = if plugin.birth\n        ((Date.now() - plugin.birth) / 1000 / 3600 / 24 / 31.5 ).toFixed(0)\n      else\n        ''\n      status = ->\n        installed = plugin.package?.version\n        published = pub(name).npm?.version\n        traffic installed, published\n\n      result = [\"<tr class=row data-name=#{plugin.plugin}>\"]\n      for column in markup.columns\n        result.push switch column\n          when 'status'    then \"<td title=status style='text-align:center; color: #{status()}'>◉\"\n          when 'name'      then \"<td title=name> #{name}\"\n          when 'menu'      then \"<td title=menu> #{plugin.factory?.category || ''}\"\n          when 'pages'     then \"<td title=pages style='text-align:center;'>#{plugin.pages?.length || ''}\"\n          when 'service'   then \"<td title=service style='text-align:center;'>#{months}\"\n          when 'bundled'   then \"<td title=bundled> #{dependencies['wiki-plugin-'+name] || ''}\"\n          when 'installed' then \"<td title=installed> #{plugin.package?.version || ''}\"\n          when 'published' then \"<td title=published> #{pub(name).npm?.version || ''}\"\n      result.join \"\\n\"\n\n    report = (markup, plugins, dependencies) ->\n      retrieve = (name) ->\n        for plugin in plugins\n          return plugin if plugin.plugin == name\n        {plugin: name}\n      inventory = if markup.plugins.length > 0\n        markup.plugins.map retrieve\n      else\n        plugins\n      head = (\"<td style='font-size:75%; color:gray;'>#{column}\" for column in markup.columns).join \"\\n\"\n      result = (format markup, plugin, dependencies for plugin, index in inventory).join \"\\n\"\n      \"<center>\n        <p><img src='/favicon.png' width=16> <span style='color:gray;'>#{window.location.host}</span></p>\n        <table style=\\\"width:100%;\\\"><tr> #{head} #{result}</table>\n        <button class=restart>restart</button>\n      </center>\"\n\n    installer = (row, npm) ->\n      return \"<p>can't find wiki-plugin-#{row.plugin} in <a href=//npmjs.com target=_blank>npmjs.com</a></p>\" unless npm?\n      $row = $item.find \"table [data-name=#{row.plugin}]\"\n      installed = (update) ->\n        index = data.install.indexOf row\n        data.install[index] = row = update.row\n        $row.find(\"[title=status]\").css('color',traffic(update.installed, npm.version))\n        $row.find(\"[title=menu]\").text(row.factory?.category || '')\n        $row.find(\"[title=pages]\").text(row.pages?.length || '')\n        $row.find('[title=service]').text('0')\n        $row.find(\"[title=installed]\").text(row.package?.version || '')\n        $item.find('button.restart').removeAttr('disabled').show()\n\n      window.plugins.plugmatic.install = (version) ->\n        $.ajax\n          type: 'POST'\n          url: '/plugin/plugmatic/install'\n          data: JSON.stringify({version, plugin: row.plugin})\n          contentType: \"application/json; charset=utf-8\"\n          dataType: 'json'\n          success: installed\n          error: trouble\n        # http://stackoverflow.com/questions/2933826/how-to-close-jquery-dialog-within-the-dialog\n        $row.find(\"[title=status]\").css('color','white')\n        $('.ui-dialog-content:visible').dialog('close')\n\n      array = (obj) -> if typeof obj is 'string' then [obj] else obj\n      choice = (version) ->\n        button = () -> \"<button onclick=window.plugins.plugmatic.install('#{version}')> install </button>\"\n        \"<tr> <td> #{version} <td> #{if version == row.package?.version then 'installed' else button()}\"\n      choices = (choice(version) for version in array(npm.versions).reverse())\n      \"<h3>#{npm.description}</h3> <p>Choose a version to install.</p> <table>#{choices.join \"\\n\"}\"\n\n    detail = (name, done) ->\n      row = data.install.find (obj) -> obj.plugin == name\n      text = (obj) -> return '' unless obj; (expand obj).replace(/\\n/g,'<br>')\n      struct = (obj) -> return '' unless obj; \"<pre>#{expand JSON.stringify obj, null, '  '}</pre>\"\n      pages = (obj) -> \"<p><b><a href=#>#{obj.title}</a></b><br>#{obj.synopsis}</p>\"\n      birth = (obj) -> if obj then (new Date obj).toString() else 'built-in'\n      npmjs = (more) -> $.getJSON \"/plugin/plugmatic/view/#{name}\", more\n      switch column\n        when 'status' then npmjs (npm) -> done installer row, npm\n        when 'name' then done text row.authors\n        when 'menu' then done struct row.factory\n        when 'pages' then done row.pages.map(pages).join('')\n        when 'service' then done birth row.birth\n        when 'bundled' then done struct data.bundle.data.dependencies\n        when 'installed' then done struct row.package\n        when 'published' then done struct pub(name).npm || ''\n        else done 'unexpected column'\n\n    showdetail = (e) ->\n      $parent = $(e.target).parent()\n      name = $parent.data('name')\n      detail name, (html) ->\n        wiki.dialog \"#{name} plugin #{column}\", html || ''\n\n    more = (e) ->\n     if e.shiftKey\n       showdetail e\n\n    bright = (e) -> more(e); $(e.currentTarget).css 'background-color', '#f8f8f8'\n    normal = (e) -> $(e.currentTarget).css 'background-color', '#eee'\n\n    $item.find('p').html report markup, data.install, data.bundle.data.dependencies\n    $item.find('.row').hover bright, normal\n    $item.find('p td').click (e) ->\n      column = $(e.target).attr('title')\n      showdetail e\n    $item.find('button.restart').hide().click (e) ->\n      $item.find('button.restart').attr(\"disabled\",\"disabled\")\n      $.ajax\n        type: 'POST'\n        url: '/plugin/plugmatic/restart'\n        success: ->\n          # poll for restart complete, then ...\n          # $item.find('button.restart').hide()\n        error: trouble\n\n  trouble = (xhr) -> \n    $item.find('p').html xhr.responseJSON?.error || 'server error'\n\n  if markup.plugins.length\n    $.ajax\n      type: 'POST'\n      url: '/plugin/plugmatic/plugins'\n      data: JSON.stringify(markup)\n      contentType: \"application/json; charset=utf-8\"\n      dataType: 'json'\n      success: render\n      error: trouble\n  else\n    $.ajax\n      url: '/plugin/plugmatic/plugins'\n      dataType: 'json'\n      success: render\n      error: trouble\n\nbind = ($item, item) ->\n  $item.dblclick -> wiki.textEditor $item, item\n\nwindow.plugins.plugmatic = {emit, bind} if window?\nmodule.exports = {parse} if module?\n\n"
  ],
  "sourceRoot": ""
}