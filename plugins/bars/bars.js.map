{
  "version": 3,
  "sources": [
    "bars.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Bars Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-bars/blob/master/LICENSE.txt\n###\n\nwindow.plugins.bars =\n  bind: (div, item) ->\n  emit: (div, item) ->\n    wiki.getScript '/js/d3/d3.min.js', ->\n      data = (x[1]/100.0 for x in wiki.getData() by 5)\n      w = 380\n      h = 230\n      x = d3.scale.linear().domain([0, 1]).range([0, w])\n      y = d3.scale.ordinal().domain(d3.range(data.length)).rangeBands([0, h], .2)\n\n      vis = d3.select(div.get(0))\n        .append(\"svg:svg\")\n        .attr(\"width\", w + 40)\n        .attr(\"height\", h + 30)\n        .append(\"svg:g\")\n        .attr(\"transform\", \"translate(20,0)\")\n\n      bars = vis.selectAll(\"g.bar\")\n        .data(data)\n        .enter().append(\"svg:g\")\n        .attr(\"class\", \"bar\")\n        .attr \"transform\", (d, i) -> \"translate(0,#{y(i)})\"\n\n      bars.append(\"svg:rect\")\n        .attr(\"fill\", \"steelblue\")\n        .attr(\"width\", x)\n        .attr(\"height\", y.rangeBand())\n\n      bars.append(\"svg:text\")\n        .attr(\"x\", x)\n        .attr(\"y\", y.rangeBand() / 2)\n        .attr(\"dx\", -6)\n        .attr(\"dy\", \".35em\")\n        .attr(\"fill\", \"white\")\n        .attr(\"text-anchor\", \"end\")\n        .text(x.tickFormat(100))\n\n      bars.append(\"svg:text\")\n        .attr(\"x\", 0)\n        .attr(\"y\", y.rangeBand() / 2)\n        .attr(\"dx\", -6)\n        .attr(\"dy\", \".35em\")\n        .attr(\"text-anchor\", \"end\")\n        .text (d, i) -> String.fromCharCode(65 + i)\n\n      rules = vis.selectAll(\"g.rule\")\n        .data(x.ticks(10))\n        .enter().append(\"svg:g\")\n        .attr(\"class\", \"rule\")\n        .attr \"transform\", (d) -> \"translate(#{x(d)},0)\"\n\n      rules.append(\"svg:line\")\n        .attr(\"y1\", h)\n        .attr(\"y2\", h + 6)\n        .attr(\"stroke\", \"black\")\n\n      rules.append(\"svg:line\")\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-opacity\", .3)\n\n      rules.append(\"svg:text\")\n        .attr(\"y\", h + 9)\n        .attr(\"dy\", \".71em\")\n        .attr(\"text-anchor\", \"middle\")\n        .text(x.tickFormat(10))\n\n      vis.append(\"svg:line\")\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"stroke\", \"black\")\n"
  ],
  "sourceRoot": ""
}