{
  "version": 3,
  "sources": [
    "scatter.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "###\n * Federated Wiki : Scatter Plugin\n *\n * Licensed under the MIT license.\n * https://github.com/fedwiki/wiki-plugin-scatter/blob/master/LICENSE.txt\n###\n\nwindow.plugins.scatter =\n  bind: (div, item) ->\n  emit: (div, item) ->\n    wiki.getScript '/js/d3/d3.min.js', ->\n      div.append '''\n        <style>\n        svg {\n          font: 10px sans-serif;\n          background: #eee;\n        }\n        circle {\n          fill: gray;\n          stroke: white;\n        }\n       </style>\n      '''\n\n      value = (obj) ->\n        return NaN unless obj?\n        switch obj.constructor\n          when Number then obj\n          when String then +obj\n          when Array then value(obj[0])\n          when Object then value(obj.value)\n          when Function then obj()\n          else NaN\n\n      round = (n) ->\n        return '?' unless n?\n        if n.toString().match /\\.\\d\\d\\d/\n          n.toFixed 2\n        else\n          n\n\n      who = $('.chart,.data,.calculator').last()\n      data = who.data('item').data\n      horz = \"Water / Land Intensity Total\"\n      vert = \"Total Score\"\n      xdat = (d) -> value d[horz]\n      ydat = (d) -> value d[vert]\n      title = (d) ->\n        \"\"\"\n        #{d.Material}\n        #{horz}: #{round xdat d}\n        #{vert}: #{round ydat d}\n        Rank: #{value d['Rank']}\n        \"\"\"\n\n      who.bind 'thumb', (e, thumb) ->\n        return if thumb == horz\n        wiki.log 'thumb', thumb\n        horz = thumb\n        x = d3.scale.linear().domain(extent xdat).range([ 0, w ])\n        d3.selectAll(\"circle\").transition()\n          .duration(500)\n          .delay((d, i) -> i * 10)\n          .attr(\"cx\", (d) -> x(xdat(d)))\n          .selectAll(\"title\").text title\n\n      extent = (f) ->\n        [lo, hi] = [d3.min(data,f), d3.max(data,f)]\n        step = Math.pow 10, Math.floor Math.log(hi-lo) / Math.log(10)\n        [step*Math.floor(lo/step), step*Math.ceil(hi/step)]\n\n      w = 360\n      h = 275\n      p = 20\n      x = d3.scale.linear().domain(extent xdat).range([ 0, w ])\n      y = d3.scale.linear().domain(extent ydat).range([ h, 0 ])\n      fill = d3.scale.category20()\n\n      vis = d3.select(div.get(0))\n        .data([ data ])\n        .append(\"svg:svg\")\n        .attr(\"width\", w + p * 2)\n        .attr(\"height\", h + p * 2)\n        .append(\"svg:g\")\n        .attr(\"transform\", \"translate(\" + p + \",\" + p + \")\")\n\n      vis.selectAll(\"circle\")\n        .data(data)\n        .enter()\n        .append(\"svg:circle\")\n        .attr(\"cx\", (d) -> x(xdat(d)))\n        .attr(\"cy\", (d) -> y(ydat(d)))\n        .style(\"fill\", (d,i) -> fill(d.Cluster || d.Material.split(/\\s+/).reverse()[0]))\n        .style(\"cursor\", 'pointer')\n        .attr(\"r\", 10)\n        .on(\"click\", (d) ->\n          wiki.doInternalLink(d.Material, div.parents '.page'))\n        .append(\"svg:title\").text title\n"
  ],
  "sourceRoot": ""
}